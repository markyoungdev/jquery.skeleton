#!/usr/bin/env node

const path    = require("path")
    , fs      = require("fs.extra")
    , program = require("commander")
    , version = JSON.parse(fs.readFileSync(__dirname + '/../package.json')).version
    , exec    = require('child_process').exec
    , Helpers = require("./helpers")
    , _       = require("underscore")
    , _s      = require("underscore.string")

program
  .version(version)
  .option('-i, --init', "Initializes the current project folder. You'll get TDD, minification, folder structure, ...")
  .option('-u, --update', "Update some parts of the current project folder.")
  .option('-l, --license', "Add the MIT license to the project folder and the README.")
  .parse(process.argv)

if(program.init) {
  Helpers.createFolder(process.cwd() + '/dist')
  Helpers.createFolder(process.cwd() + '/lib')
  Helpers.createFolder(process.cwd() + '/spec')
  Helpers.createFolder(process.cwd() + '/src')

  var files = ['dist/compiler.jar', 'lib/jquery-1.7.2.min.js']

  files.forEach(function(file) {
    Helpers.copyFile(__dirname + '/../' + file, process.cwd() + '/' + file)
  })

  Helpers.copyFile(__dirname + '/../templates/spec/buster.js', process.cwd() + '/spec/buster.js')

  Helpers.copyFile(__dirname + '/../templates/spec/jquery.skeleton.spec.js', process.cwd() + '/spec/jquery.' + Helpers.getTargetProjectName() + '.spec.js', function() {
    Helpers.replaceSkeletonInFile(process.cwd() + '/spec/jquery.' + Helpers.getTargetProjectName() + '.spec.js')
  })

  Helpers.copyFile(__dirname + '/../templates/src/jquery.skeleton.js', process.cwd() + '/src/jquery.' + Helpers.getTargetProjectName() + '.js', function() {
    Helpers.replaceSkeletonInFile(process.cwd() + '/src/jquery.' + Helpers.getTargetProjectName() + '.js')
  })

  Helpers.copyFile(__dirname + '/../.travis.yml', process.cwd() + '/.travis.yml', function() {
    Helpers.addTravisConfig()
  })

  Helpers.addTestCommandToPackageFile()
  Helpers.addBusterJsDependencyToPackageFile()
}

if(program.update) {
  Helpers.addTestCommandToPackageFile()
  Helpers.addBusterJsDependencyToPackageFile()
}

if(program.license) {
  Helpers.copyFile(__dirname + '/../MIT-LICENSE', process.cwd() + '/MIT-LICENSE')
  Helpers.addLicense()
}
